Query 1: List of Players

on the top right ... click Docs

on the right you can see Documentation Explorer ... go to Query -> players
on the left you can start typing:

{
  players {
    first_name
    last_name
  }
}

Exectue the Query by hitting the play button at the top or Ctrl+Enter


You see this SQL

C:\git\github\HInfinity\express-graphql-postgres>node server.js
SELECT
  "players"."id" AS "id",
  "players"."first_name" AS "first_name",
  "players"."last_name" AS "last_name"
FROM player "players"


Produce this result

{
  "data": {
    "players": [
      {
        "first_name": "Alice",
        "last_name": "Jonas"
      },
      {
        "first_name": "Bob",
        "last_name": "Jonas"
      },
      {
        "first_name": "Charles",
        "last_name": "Thomas"
      },
      {
        "first_name": "Debbie",
        "last_name": "Thomas"
      }
    ]
  }
}


Suggest you click the History button at the top so you can easily return to any previous query

Query 2: Show the Team for each Player

{
  players {
    first_name
    last_name
    team {
      name
    }
  }
}

{
  "data": {
    "players": [
      {
        "first_name": "Bob",
        "last_name": "Jonas",
        "team": {
          "name": "Jonas Not Brothers"
        }
      },
      {
        "first_name": "Alice",
        "last_name": "Jonas",
        "team": {
          "name": "Jonas Not Brothers"
        }
      },
      {
        "first_name": "Debbie",
        "last_name": "Thomas",
        "team": {
          "name": "Team Thomas"
        }
      },
      {
        "first_name": "Charles",
        "last_name": "Thomas",
        "team": {
          "name": "Team Thomas"
        }
      }
    ]
  }
}




Query 3: Can recursively list the players -> team -> players
{
  players {
    first_name
    last_name
    team {
      name
      players {
        first_name
        last_name
      }
    }
  }
}



{
  "data": {
    "players": [
      {
        "first_name": "Bob",
        "last_name": "Jonas",
        "team": {
          "name": "Jonas Not Brothers",
          "players": [
            {
              "first_name": "Bob",
              "last_name": "Jonas"
            },
            {
              "first_name": "Alice",
              "last_name": "Jonas"
            }
          ]
        }
      },
...



Query 4: Show the Matches ... for each Match ... show the date, the winning team and the losing team

{
  matches {
    date
    winner {
      name
    }
    loser {
      name
    }
  }
}



{
  "data": {
    "matches": [
      {
        "date": "1663084800000",
        "winner": {
          "name": "Jonas Not Brothers"
        },
        "loser": {
          "name": "Team Thomas"
        }
      }
    ]
  }
}

Query 5: Expand the matches and show the player names of each Team

